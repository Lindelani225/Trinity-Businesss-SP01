@model BusinesssTrinitySP01.Models.ClientAddress

@{
    ViewBag.Title = "Create";
}

<div class="jumbotron">
    <div class="container" style="margin-top:8vh;">

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h2>Shipment Details</h2>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Streetno, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Streetno, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Streetno, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Suburb, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Suburb, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Suburb, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Province, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Province, new List<SelectListItem>
                                {
                                  new SelectListItem {Text = "KwaZulu-Natal"},
                                  //new SelectListItem {Text = "Gauteng"},
                                  //new SelectListItem {Text = "Free State"},
                                  //new SelectListItem {Text = "Mpumalanga"},
                                  //new SelectListItem {Text = "Limpopo"},
                                  //new SelectListItem {Text = "Eastern-Cape"},
                                  //new SelectListItem {Text = "Western-Cape"},
                                  //new SelectListItem {Text = "Northern-Cape"},
                                  //new SelectListItem {Text = "North-West"}
                                }, "--Select--", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Province, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PostalCode, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PostalCode, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PostalCode, "", new { @class = "text-danger" })
                </div>
            </div>



            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save and Continue" class="btn btn-primary" />
                </div>
            </div>
        </div>
        }

        @*<div>
            @Html.ActionLink("Back to List", "Index")
        </div>*@
    </div>
</div>
        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }
